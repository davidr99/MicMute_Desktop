name: .NET Core Desktop

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: MicMute                         # Replace with your solution name, i.e. MyWpfApp.sln.
      Build_Date: ${{ github.event.repository.updated_at}}

    steps:
    - name: Get Time
      run: |
        echo "DATE=$( date +\"%Y%m%d-%H%M%S\")" >> $GITHUB_OUTPUT
      id: time    
      
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    # Build project
    - name: Build .net
      run: dotnet publish -p:PublishProfile=.\Publish -c Release

    - name: Create Release Folder
      run: mkdir "${{ github.workspace }}\Release"
      
    - name: Zip Release Folder
      run: Compress-Archive -Path "${{ github.workspace }}\MicMute\bin\Release\net6.0-windows\publish\*" -Destination "${{ github.workspace }}\Release\nightly-build-${{ steps.time.outputs.DATE }}.zip"

    - name: Upload the artifact
      uses: actions/upload-artifact@v1
      with:
        name: MicMute_Desktop_Nightly_Build
        path: ${{ github.workspace }}\Release

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: Nightly-${{ env.Build_Date}}
        release_name: Nightly Release
        body: |
          Latest Build
        draft: false
        prerelease: true

    - name: Download the artifact
      uses: actions/download-artifact@v1
      with:
        name: MicMute_Desktop_Nightly_Build
        path: ./
        
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: nightly-build-${{ steps.time.outputs.DATE }}
        asset_name: nightly-build-${{ steps.time.outputs.DATE }}
        asset_content_type: application/zip
